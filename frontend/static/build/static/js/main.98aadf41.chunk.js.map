{"version":3,"sources":["serviceWorker.js","components/BaseLayout.js","components/Login.js","components/Register.js","components/Home.js","components/JobItem.js","components/JobList.js","components/JobAdd.js","components/JobEdit.js","components/JobDetail.js","index.js"],"names":["Boolean","window","location","hostname","match","BaseLayout","props","className","to","children","axios","defaults","xsrfCookieName","xsrfHeaderName","Login","handleInput","e","setState","target","name","value","handleSubmit","preventDefault","method","url","data","state","then","res","console","log","localStorage","setItem","token","history","push","catch","error","username","password","onSubmit","this","type","placeholder","onChange","React","Component","Register","key","password1","password2","email","Home","Carousel","Item","src","alt","Caption","JobItem","handleStatus","status","not_started","job","index","moment","start_date","format","href","id","supervisor","Dropdown","Toggle","variant","Menu","onClick","updateStatus","JobList","getJobs","get","headers","getItem","response","jobs","patch","indexOf","post","rows","map","Table","responsive","process","REACT_APP_BASE_URL","JobAdd","handleSelection","selection","Date","Object","assign","formData","FormData","append","details","JSON","stringify","materials","getSupervisors","supervisors","getEmployees","employees","getMaterials","availableMaterials","material","obj","text","employee","first_name","last_name","Row","Col","md","multiple","JobEdit","getJob","params","event","handleDropdown","handleDelete","delete","in_progress","complete","autoComplete","BASE_URL","Comment","addComment","JobDetail","deleteComment","comment","comments","splice","options","user","ReactDOM","render","path","component","exact","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.98aadf41.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nfunction BaseLayout(props) {\n\n\n\n    // function based components use props instead of this.props\n    // class based components you call this.props\n\n    return (\n        <div>\n            <div className=\"nav\">\n                <ul className=\"nav-bar\">\n                    <NavLink className=\"nav-link\" to=\"/\">Home Page</NavLink>\n                    {/*<NavLink className=\"nav-link\" to=\"/accounts/register\">Register</NavLink>*/}\n                    <NavLink className=\"nav-link\" to=\"/accounts/login\">Login</NavLink>\n                    <NavLink className=\"nav-link\" to=\"/schedule\">Schedule</NavLink>\n                    <NavLink className=\"nav-link\" to=\"/jobs/new\">AddJob</NavLink>\n                </ul>\n            </div>\n            {props.children}\n        </div>\n    )\n}\n\n\nexport default BaseLayout;\n","import React from 'react';\n\nimport axios from 'axios';\nimport {NavLink} from \"react-router-dom\";\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n      this.state = {\n          username: '',\n          password: '',\n      }\n    }\n    handleInput = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n}\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        axios({\n            method: 'POST',\n            url: '/api/v1/rest-auth/login/',\n            data: this.state\n        })\n            .then(res => {\n                console.log(res);\n              //save the token I get back once I succeefully login to localStorage\n              localStorage.setItem('token', res.data.token);\n              // console.log('this', this)\n              this.props.history.push('/schedule');\n            })\n            .catch(error => {\n                console.log(error);\n            })\n    }\n\n    render() {\n        return (\n                <div className=\" hero\">\n                    <div className=\"login-form\">\n                    <form  onSubmit={this.handleSubmit}>\n                        <div className=\"container\">\n                        <input className=\"login-input\" type=\"text\" name=\"username\" placeholder=\"Enter username\" value={this.state.username}\n                               onChange={this.handleInput}/>\n                               <br/>\n                        <input type=\"password\" name=\"password\" placeholder=\"Enter password\" value={this.state.password}\n                               onChange={this.handleInput}/>\n                               <br/>\n                        <input type=\"submit\" value=\"Login\"/>\n                        <br/>\n                        <button className=\"btn-light\" value='register'><NavLink className=\"register\" to=\"/accounts/register\">Register</NavLink></button>\n                        </div>\n                    </form>\n\n                    </div>\n                </div>\n        )\n    }\n}\n\nexport default Login;\n","import React from 'react';\n\nimport axios from 'axios';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            password1: '',\n            password2: '',\n            email: '',\n        }\n    }\n\n    handleInput = (e) => {\n        // e is the event\n        // e.target is the input\n        // e.target.name is pulling the value of the name attribute off of the input I typed in\n\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    handleSubmit = (e) => {\n        // default behavior of a form submit is to reload the page\n        // e.preventDefault() prevents the page from reloading / stops the default behavior\n        e.preventDefault();\n\n        axios({\n            method: 'POST',\n            url: '/api/v1/rest-auth/registration/',\n            data: this.state\n        })\n            .then(res => {\n                console.log(res);\n                // save the token we get back once we successfully login to localStorage\n                localStorage.setItem('token', res.data.key);\n                this.props.history.push('/schedule');\n            })\n            .catch(error => {\n                console.log(error);\n            })\n\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <input type=\"text\" name=\"username\" placeholder=\"username\" value={this.state.username}\n                       onChange={this.handleInput}/>\n                <br/>\n               <input type=\"email\" name=\"email\" placeholder=\"email\" value={this.state.email}\n                       onChange={this.handleInput}/>\n                <br/>\n                <input type=\"password\" name=\"password1\" placeholder=\"password\" value={this.state.password1}\n                       onChange={this.handleInput}/>\n                <br/>\n               <input type=\"password\" name=\"password2\" placeholder=\"confirm password\" value={this.state.password2}\n                       onChange={this.handleInput}/>\n                <br/>\n                <button type=\"submit\" value=\"Register\">Register</button>\n                {/*<input type=\"submit\" value=\"Register\"/>*/}\n            </form>\n        )\n    }\n}\n\nexport default Register;\n","import React from 'react';\nimport {Carousel} from 'react-bootstrap';\n\n\nimport '../App.css';\n\n\nfunction Home(props) {\n\n    // function based components use props instead of this.props\n    // class based components you call this.props\n    return (\n        <div>\n\n            {/*{props.children}*/}\n\n            <Carousel className=\"container\">\n                <Carousel>\n                    <Carousel.Item >\n                        <img\n                            className=\" carousel-image\"\n                            src=\"https://gravityjack.com/wp-content/uploads/2016/08/mobile-app-communication.jpg\"\n                            alt=\"First slide\"\n                        />\n                        <Carousel.Caption>\n\n                            <p>REAL TIME COMMUNICATION AT YOUR FINGERTIPS</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item >\n                        <img\n                            className=\"d-block w-100 carousel-image\"\n                            src=\"https://integratedwork.com/wp-content/uploads/2018/05/Ideas-e1527025600841.png\"\n                            alt=\"Third slide\"\n\n                        />\n\n                        <Carousel.Caption>\n                            {/*<h3>Second slide label</h3>*/}\n                            {/*<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>*/}\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item >\n                        <img\n                            className=\"d-block w-100 carousel-image\"\n                            src=\"https://integratedwork.com/wp-content/uploads/2018/05/Communications-Flow-Graphic.png\"\n                            alt=\"Third slide\"\n                        />\n\n                        <Carousel.Caption>\n                            {/*<h3>Third slide label</h3>*/}\n                            {/*<p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>*/}\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n            </Carousel>\n        </div>\n    )\n}\n\n\nexport default Home;\n","import React from 'react';\nimport axios from 'axios';\nimport {Dropdown} from \"react-bootstrap\";\nimport {Table} from 'react-bootstrap';\nimport {Tab} from 'react-bootstrap';\nimport moment from 'moment';\n\n\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\n\n\nclass JobItem extends React.Component {\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n          status: ''\n      }\n\n\n    }\n\n\n\n    // let updateStatus = (event) => {\n    //   console.log(event.target.name)\n    //     this.props.\n    // }\n\n    handleStatus = (e) => {\n        console.log('event firing onchange')\n    }\n\n    render() {\n        let statusOptions = {not_started: \"Not Started\", \"in_progress\": \"In Progress\", \"complete\": \"Completed\"}\n        let key = this.props.job.status;\n        let status = statusOptions[key];\n        return (\n    <tr className=\"schedule.color\">\n      <td className=\"schedule.list\">{this.props.index}</td>\n      <td>{moment(this.props.job.start_date).format(\"LL\")}</td>\n      <td><a href={\"/jobs/detail/\"+this.props.job.id}>{this.props.job.location}</a></td>\n      <td>{this.props.job.supervisor.username}</td>\n      <td><Dropdown className=\"button\">\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" onChange={this.handleStatus}>\n                    {status}\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                    <Dropdown.Item name=\"not_started\" onClick={(e) => this.props.updateStatus(\"not_started\", this.props.job)}>Not Started</Dropdown.Item>\n                    <Dropdown.Item name=\"in_progress\" onClick={(e) => this.props.updateStatus(\"in_progress\", this.props.job)}>In Progress</Dropdown.Item>\n                    <Dropdown.Item name=\"complete\" onClick={(e) => this.props.updateStatus(\"complete\", this.props.job)}>Completed</Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown></td>\n    </tr>\n  );\n    }\n\n}\n\nexport default JobItem;\n","import React from 'react';\nimport JobItem from './JobItem';\nimport {Table} from 'react-bootstrap';\n\nimport axios from 'axios';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\n// const BASE_URL = process.env.REACT_APP_BASE_URL\n\nclass JobList extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        jobs: []\n    }\n  }\n\n  componentDidMount() {\n    this.getJobs();\n  }\n\n  getJobs = () => {\n    axios.get(`/api/v1/jobs/`, {headers: {'Authorization': `Token ${localStorage.getItem('token')}`}})\n      .then(response => {\n        // console.log('response', response.data);\n        this.setState({jobs: response.data});\n      })\n      .catch(error => {\n        console.log('Oops, something went wrong', error);\n    });\n  }\n\n  updateStatus = (status, job) => {\n      axios.patch(`/api/v1/jobs/${job.id}/`,{status:status}, {headers: {'Authorization': `Token ${localStorage.getItem('token')}`}})\n      .then(response => {\n        console.log('update sent', response.data);\n        let jobs = [...this.state.jobs];\n        let index = jobs.indexOf(job);\n\n        jobs[index].status = status;\n        this.setState({jobs});\n\n        if(status === 'in progress, complete'){\n            axios.post(`/api/v1/twiliocall/`)\n                .then(function (response) {\n                    console.log(response);\n                  })\n                  .catch(function (error) {\n                    console.log(error);\n                  });\n        }\n      })\n      .catch(error => {\n        console.log('Oops, something went wrong', error);\n      })\n  }\n\n  render() {\n    console.log('joblist component');\n    let rows = this.state.jobs.map((job) => {\n      return <JobItem key={job.id} job={job} updateStatus={this.updateStatus}/>\n    });\n\n    return(<Table responsive>\n              <thead className=\"head-item\">\n                  <tr className=\"ttr\">\n                  <th>Employees</th>\n                  <th>Start Date</th>\n                  <th>Location</th>\n                  <th>Supervisor</th>\n                  <th>Status</th>\n\n                </tr>\n              </thead>\n              <tbody>\n                {rows}\n              </tbody>\n              </Table>)\n  }\n}\n\nexport default JobList;\n","import React from 'react';\nimport axios from 'axios';\nimport { Col, Row, Dropdown } from 'react-bootstrap';\nimport Multiselect from 'react-bootstrap-multiselect'\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\n\nclass JobAdd extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            start_date: '',\n            location: '',\n            details: '',\n            materials: [],\n            employee: '',\n            supervisor: '',\n            supervisors: [],\n            employees: [],\n            availableMaterials: [],\n        }\n    }\n\n    componentDidMount() {\n        this.getSupervisors();\n        this.getMaterials();\n        this.getEmployees();\n    }\n\n   handleInput = (e) => {\n    this.setState({[e.target.name]: e.target.value});\n   }\n\n   handleSelection = (e, selection) => {\n       this.setState({[e.target.name]: selection}, ()=>console.log(this.state));\n   }\n\n   handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(e.target.name);\n\n        var date = new Date('MM-DD-YYYY')\n      \n\n        // let name = e.target.name;\n        //\n        // let location = this.state.location;\n        // let details = this.state.details;\n        // let materials = ['bricks', 'mortar'];\n        // let employee_assigned = this.state.employee_assigned;\n\n\n        let job = Object.assign({}, this.state);\n\n\n        let formData = new FormData();\n        formData.append( 'start_date',job.start_date);\n        formData.append('location',job.location);\n        formData.append('details', job.details);\n        formData.append('materials', JSON.stringify(job.materials));\n        formData.append('supervisor', this.state.supervisor.id);\n\n        axios({\n            method: 'POST',\n            url: 'http://localhost:3000/api/v1/jobs/',\n            data: formData,\n            headers: {'Authorization': `Token ${localStorage.getItem('token')}`}\n        })\n            .then(res => {\n                console.log(res);\n                this.props.history.push('/schedule/');\n\n\n            })\n            .catch(error => {\n                console.log(error);\n            })\n   }\n\n   getSupervisors = () => {\n    axios.get(`/api/v1/supervisors/`, {headers: {'Authorization': `Token ${localStorage.getItem('token')}`}})\n      .then(response => {\n        console.log('response', response.data);\n        this.setState({supervisors: response.data});\n      })\n      .catch(error => {\n        console.log('Oops, something went wrong', error);\n      })\n  }\n\n    getEmployees = () => {\n        axios.get(`/api/v1/employees/`, {headers: {'Authorization': `Token ${localStorage.getItem('token')}`}})\n          .then(response => {\n            this.setState({employees: response.data});\n          })\n          .catch(error => {\n            console.log('Oops, something went wrong', error);\n          })\n  }\n\n    getMaterials = () => {\n         axios.get(`/api/v1/materials/`, {headers: {'Authorization': `Token ${localStorage.getItem('token')}`}})\n          .then(response => {\n            console.log('response', response.data);\n            let availableMaterials = [...this.state.availableMaterials];\n\n            response.data.map(material => {\n                let obj = {};\n                obj.value = material.text;\n                availableMaterials.push(obj);\n            });\n\n            this.setState({availableMaterials});\n          })\n          .catch(error => {\n            console.log('Oops, something went wrong', error);\n          })\n  }\n\n\n    render() {\n\n        console.log('state', this.state);\n\n        let supervisors = this.state.supervisors.map(supervisor => (\n            <Dropdown.Item key={supervisor.id} name=\"supervisor\" onClick={(e) => this.handleSelection(e, supervisor)}>{supervisor.first_name + \" \" + supervisor.last_name}</Dropdown.Item>\n        ));\n        let employees = this.state.employees.map(employee => (\n            <Dropdown.Item key={employee.id} name=\"employee\" onClick={(e) => this.handleSelection(e, employee)}>{employee.first_name + \" \" + employee.last_name}</Dropdown.Item>\n        ));\n        // let key = this.props.job.status;\n        // let supervisors = supervisorOptions[key];\n\n\n        const data = [{ value:'One', selected:true }, { value: 'Two' }, { value:'Three' }]\n\n        return (\n\n        <div className=\"add-job-form\">\n            <Row>\n                <Col md={4}>\n            <form onSubmit={this.handleSubmit}>\n                <h4>Add Job</h4>\n                <input className=\"add-input\" type=\"text\" name=\"start_date\" placeholder=\"Start Date\" value={this.state.start_date} onChange={this.handleInput}/>\n                <br/>\n                <input type=\"text\" name=\"location\" placeholder=\"Location\" value={this.state.location} onChange={this.handleInput}/>\n                <br/>\n                <textarea rows=\"5\" type=\"text\" name=\"details\" placeholder=\"Details\" value={this.state.details} onChange={this.handleInput}/>\n                <br/>\n\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                      {this.state.supervisor ? this.state.supervisor.first_name + \" \" + this.state.supervisor.last_name : 'Select Supervisor'}\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu>\n                      {supervisors}\n                  </Dropdown.Menu>\n                </Dropdown>\n                <br/>\n                <Multiselect className=\"select-materials\" data={this.state.availableMaterials} multiple />\n                <br/>\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                      {this.state.employee ? this.state.employee.first_name + \" \" + this.state.employee.last_name: 'Select Employee'}\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu>\n                      {employees}\n                  </Dropdown.Menu>\n                </Dropdown>\n\n\n                {/*<input type=\"text\" name=\"employee_assigned\" placeholder=\"Employee Assigned\" value={this.state.employee_assigned} onChange={this.handleInput}/>*/}\n                <br/>\n                {/*<button>Save Job</button>*/}\n                <button name=\"save-and-add\">Save and add another</button>\n                <button name=\"save\">Save</button>\n            </form>\n            </Col>\n            <Col md={8}>\n                <img className=\"imgAddJob\"  src=\"https://blogin.co/uploads/images/naslovna.png\" />\n\n            </Col>\n            </Row>\n            <Row className=\"boxImg\">\n                 <Col md={6}>\n                <img className=\"imgLeft\"  src=\"https://osmaviation.com/app/uploads/2018/06/Crew-management_shnsrx.png\" />\n                 </Col>\n                 <Col md={6}>\n                <img className=\"imgRight\"  src=\"https://blogin.co/uploads/images/naslovna.png\" />\n            </Col>\n\n\n            </Row>\n\n         </div>\n\n\n\n        )\n    }\n}\n\nexport default JobAdd;\n","import React from 'react';\n\nimport axios from 'axios';\nimport {Col, Row} from \"react-bootstrap\";\nimport {Dropdown} from \"react-bootstrap\";\nimport {Table} from 'react-bootstrap';\nimport {Tab} from 'react-bootstrap';\nimport moment from 'moment';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nclass JobEdit extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      location: '',\n      details: '',\n      status: '',\n      materials: '',\n      start_date: '',\n      employees: '',\n      supervisor: ''\n    }\n\n  }\n\n  componentDidMount() {\n    this.getJob();\n  }\n\n  getJob = () => {\n    // console.log(this.props.match.params.id)\n    // axios.get(`/api/v1/jobs/${this.props.match.params.id}`)\n    axios.get(`/api/v1/jobs/${this.props.match.params.id}/`, {\n      headers: {\n        'Authorization': `Token ${localStorage.getItem('token')}`\n      }\n    }).then(response => {\n      // handle success\n      // console.log(response);\n      let data = Object.assign(this.state, response.data);\n      this.setState(data);\n\n    }).catch(error => {\n      // handle error\n      console.log(error);\n    });\n  };\n\n  handleInput = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleDropdown = (status) => {\n    console.log();\n    this.setState({status});\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    let data = {\n      location: this.state.location,\n      details: this.state.details,\n      status: this.state.status\n    }\n    axios.patch(`/api/v1/jobs/3/`, data, {\n      headers: {\n        'Authorization': `Token ${localStorage.getItem('token')}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      // handle succes\n      this.setState(data);\n      this.setState({details: \"\", location: \"\", status: \"\"})\n\n    }).catch(error => {\n      // handle error\n      console.log(error);\n    });\n  }\n\n  handleDelete = () => {\n    axios.delete(`/api/v1/jobs/${this.props.match.params.id}`).then(response => {\n      // handle success\n      this.props.history.push('/schedule/')\n\n    }).catch(error => {\n      // handle error\n      console.log(error);\n    });\n  }\n\n  render() {\n    console.log(this.state);\n\n    let statusOptions = {not_started: \"Not Started\", in_progress: \"In Progress\", complete: \"Completed\"}\n    let key = this.state.status;\n    let status = statusOptions[key];\n\n\n    return (<div className=\"job_edit\">\n      <Row>\n        <Col md={4}>\n          <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n            <h4>Edit</h4>\n            <input type=\"text\" name=\"location\" placeholder=\"Location\" value={this.state.location} onChange={this.handleInput}/>\n            <br/>\n            <input type=\"text\" name=\"details\" placeholder=\"Details\" value={this.state.details} onChange={this.handleInput}/>\n            <br/>\n            <input type=\"text\" name=\"status\" placeholder=\"Status\" value={this.state.status} onChange={this.handleInput}/>\n            <br/>\n            <input type=\"text\" name=\"materials\" placeholder=\"Materials\" value={this.state.materials} onChange={this.handleInput}/>\n            <br/>\n            <input type=\"text\" name=\"employees\" placeholder=\"Employees\" value={this.state.employees} onChange={this.handleInput}/>\n            <br/>\n            <input type=\"text\" name=\"supervisors\" placeholder=\"Supervisors\" value={this.state.supervisors} onChange={this.handleInput}/>\n            <br/>\n            <button>Save</button>\n            <button type=\"button\" onClick={this.handleDelete}>Delete</button>\n          </form>\n        </Col>\n        <Col md={8}>\n          <img className=\"imgAddJob\" src=\"https://blogin.co/uploads/images/naslovna.png\"/>\n\n        </Col>\n      </Row>\n      <Row className=\"boxImg\">\n        <Col md={6}></Col>\n        <Col md={8}>\n          <img src=\"http://remotework.works/wp-content/uploads/2018/06/BurstCommunicationProcess-1024x360.png\"/>\n        </Col>\n\n      </Row>\n\n\n      <Dropdown className=\"button\">\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" onChange={this.handleStatus}>\n                    {status}\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                    <Dropdown.Item onClick={() => this.handleDropdown(\"not_started\")}>Not Started</Dropdown.Item>\n                    <Dropdown.Item onClick={() => this.handleDropdown(\"in_progress\")}>In Progress</Dropdown.Item>\n                    <Dropdown.Item onClick={() => this.handleDropdown(\"complete\")}>Completed</Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>\n\n\n    </div>)\n  }\n}\n\nexport default JobEdit;\n","import React from 'react';\nimport axios from 'axios';\nimport {NavLink} from \"react-router-dom\";\nimport moment from 'moment';\n\n\n// import divWithClassName from \"react-bootstrap/es/utils/divWithClassName\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nclass Comment extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            text: ''\n        }\n    }\n\n    handleInput = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    render() {\n      // console.log(this.props);\n        return (\n            <form onSubmit={(e) => this.props.addComment(e, this.state.text)}>\n                <input type=\"text\" name=\"text\" value={this.state.text} onChange={this.handleInput}/>\n                <button>Save Comment</button>\n\n            </form>\n        )\n    }\n}\n\n\n\nclass JobDetail extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            supervisor: '',\n            employees: [],\n            location: '',\n            details: '',\n            materials: [],\n            start_date: '',\n            status: '',\n            comments: []\n        }\n    }\n\n    componentDidMount() {\n        this.getJob();\n    }\n\n      deleteComment = (comment) => {\n\n        let comments = [...this.state.comments];\n\n        axios.delete(`/api/v1/comments/${comment.id}`)\n            .then(response =>  {\n                // handle success\n                // this.props.history.push('/schedule/')\n                let index = comments.indexOf(comment);\n                comments.splice(index, 1);\n                this.setState({comments});\n\n            })\n            .catch (error => {\n                // handle error\n                console.log(error);\n            });\n    }\n\n    getJob = () => {\n        axios.get(`/api/v1/jobs/${this.props.match.params.id}`)\n            .then(response =>  {\n                // handle success\n                // console.log(response);\n                this.setState(response.data);\n            })\n            .catch (error => {\n                // handle error\n                console.log(error);\n            });\n    };\n\n    addComment = (e, text) => {\n        e.preventDefault();\n        console.log('text', text);\n\n        let comments = [...this.state.comments];\n\n        const options = {\n          method: 'POST',\n          headers: {'content-type': 'application/json' },\n          data: {text: text, job: this.state.id, user: 20},\n          url: `${BASE_URL}/api/v1/comments/`,\n        };\n\n        axios(options)\n            .then(response =>  {\n                console.log(response);\n                comments.push(response.data);\n                this.setState({comments});\n            })\n            .catch (error => {\n                console.log(error);\n            });\n\n    }\n\n\n    render() {\n\n\n        console.log(this.props);\n        let employees = this.state.employees.map((employee) => {\n            return <div key={employee.id}>{employee.username}</div>\n        });\n\n        let materials = this.state.materials.map((material) => {\n            return <div key={material.id}>{material.text}</div>\n        });\n\n        let comments = this.state.comments.map(comment => {\n            return <div key={comment.id}>{comment.text}\n                <button type=\"button\" onClick={() => this.deleteComment(comment)}>Delete</button>\n                </div>\n        })\n\n        return (\n            <div>\n                <button className=\"btn-light\" value='edit'><NavLink className=\"edit\" to={`/jobs/edit/${this.props.match.params.id}`}>Edit</NavLink></button>\n                <h3>{this.state.location}</h3>\n                <p>Supervisor- {this.state.supervisor.username}</p>\n                <p>Details- {this.state.details}</p>\n                <p>Employees:</p>\n                {employees}\n                <br/>\n                <p>Materials:</p>\n                {materials}\n                <br/>\n                <p>Start Date- {moment(this.state.start_date).format(\"LL\")}</p>\n                <p>Job Status- {this.state.status}</p>\n                <br/>\n                <p>Comments:</p>\n                {comments}\n                <Comment addComment={this.addComment} />\n\n\n\n            </div>\n\n\n        )\n    }\n}\n\nexport default JobDetail;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport {ReactBootstrap, Table} from 'react-bootstrap-table';\nimport BaseLayout from './components/BaseLayout';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Home from './components/Home';\nimport JobList from './components/JobList';\nimport JobItem from './components/JobItem';\nimport JobAdd from './components/JobAdd';\nimport JobEdit from './components/JobEdit';\nimport JobDetail from './components/JobDetail';\n\n\n\n\nReactDOM.render(<BrowserRouter>\n  <BaseLayout>\n      <Switch>\n          <Route path=\"/accounts/login\" component={Login}/>\n          <Route path=\"/accounts/register\" component={Register}/>\n          <Route path=\"/schedule/\" component={JobList}/>\n          <Route path=\"/jobs/new/\" component={JobAdd} />\n          <Route path=\"/jobs/edit/:id/\" component={JobEdit} />\n          <Route path=\"/jobs/detail/:id/\" component={JobDetail}/>\n          // <Route path=\"/jobs/detail/:id/edit/\" component={JobEdit} />\n\n          <Route exact path=\"/\" component={Home}/>\n      </Switch>\n  </BaseLayout>\n</BrowserRouter>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}